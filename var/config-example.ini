;;  Database
;;
[db]

; SQLite3 via PDO
type = "sqlite"
sqlite_path = "var/main.db"

; MySQL/MariaDB via PDO
; NOT YET IMPLEMENTED
; type = "mysql"
; mysql_db = "database"
; mysql_user = "username"
; mysql_pass = "password"


;;  Global
;;
[global]

; Set to true to enable dump() and other debugging info
debug = true

; Set to true in production to let Twig cache compiled templates
production = false

; System administrator backdoor
;
; The system administrator can define a password here which WILL WORK FOR
; EVERY ACTIVE USER.  This is for troubleshooting purposes.  In order to avoid
; the obvious security risk that this poses, the backdoor is only valid on the
; specified day.
;
; Password (empty or '*' means disabled entirely, min. 12 characters)
backdoor_password = "*"
;
; Date
backdoor_date = "1970-01-01"

; Twig cache location
twig_path = "var/twig_cache"

; Language code to imply by default on '/'
default_lang = "fr"

; List of all language codes that are valid for this project
languages = "en fr"

; Product name
name = "PyriteView"

; Server name
host = "localhost"

; Prefer SSL or plain URLs
; (Used in generating URLs from the command line.)
use_ssl = false

; Where to e-mail site crash reports to
; (Disabled by default.)
;mail_errors_to = "foo@example.com"

; File to store crash reports to
save_errors_in = "var/crashes.txt"

; From address for outgoing e-mails
mail_from = "PyriteView <test@example.com>"

; Reject registrations with emails matching regex
mail_reject = "/\.bogus$/"

; Force users who can edit outgoing e-mail to do so immediately whenever the
; queue isn't empty.
force_outbox = false

; When a user validates their own e-mail address, how long should the one-time
; link be valid for, in minutes.
onetime_lifetime = 20

; When a user is invited by another, how long should the one-time link be
; valid for, in days.
invite_lifetime = 7

; When a user clicks a one-time (be it "onetime" or "invite") validation link,
; as its name implies the link immediately becomes invalid.  Setting this to
; TRUE however, keeps those links functional until their expiration.
onetime_multiple = false

[recaptcha]
site_key = "6Lfo1xcqAAAAADCMsjBqz_g_JqiiR_vy19DHuCfu"  ; Google Test key - change for production
secret_key = "6Lfo1xcqAAAAALzljfJwg7Zjih4gxo1MRjeTcNNN"  ; Google Test key - change for production


[Mail]
Mailer=smtp
host = mailpit
SMTP_Auth = false
username=
password=
port=1025
encryption=null
mail_from_name=PyriteView
mail_from_address="test@pyriteview.com"
SMTPSecure = ""

;;  Users
;;
[users]

; Add your own custom fields here.
fields[gender] = "VARCHAR(1) CHECK(gender IN ('X', 'M', 'F', 'O')) NOT NULL DEFAULT 'X'"
fields[profession] = "VARCHAR(255) NOT NULL DEFAULT ''"
fields[employer] = "VARCHAR(255) NOT NULL DEFAULT ''"


;;  Session
;;
[session]

; Maximum life span of an unmodified session (minutes)
gc_maxlifetime = 720


;;  ACL
;;
[acl]

; Roles
; The framework requires at minimum: admin, member
roles[] = "admin"
roles[] = "member"
roles[] = "editor-in-chief"
roles[] = "editor"
roles[] = "author"
roles[] = "reader"
;peer is a sudo role, not in db
roles[] = "peer"

; Actions
; Other actions may be logged in the audit trail (i.e. 'login') but only those
; you intend to grant rights for matter here.
; The framework requires at minimum: login, view, edit, create, delete
actions[] = "login"
actions[] = "view"
actions[] = "edit"
actions[] = "move"
actions[] = "create"
actions[] = "delete"

; Object Types
; The framework requires at minimum: user, role
objectTypes[] = "user"
objectTypes[] = "role"
objectTypes[] = "issue"
objectTypes[] = "article"
objectTypes[] = "email"

; Roles to automatically grant to new registrations
;
; The format is a space-separated list of roles.  Note that the "member" role
; is assigned automatically to allow users to sign in at all.
;
; Invited are roles to grant users created by other users and registered are
; roles granted to users self-created with the registration form.
invited_auto_roles = ""
registered_auto_roles = "author"

; Default permissions to grant to roles during installation
;
; The format is:
; grant[] = "roleName action|* objectType|*"
;
; These rights are always granted without a restriction on objectId.

; Usually, these two permissions should not be modified or removed!
grant[] = "admin  *     *"
grant[] = "member login *"

; Add your custom permissions below:
grant[] = "editor-in-chief *       user"
grant[] = "editor-in-chief *       issue"
grant[] = "editor-in-chief *       article"
grant[] = "editor-in-chief edit    email"
grant[] = "editor          create  user"
grant[] = "editor          create  article"
grant[] = "editor          edit    email"
grant[] = "author          create  article"
grant[] = "author          create  user"
grant[] = "reader          view    issue"
grant[] = "reader          view    article"


;; Issues
;;
[issues]

; Add your own custom fields here in fields[].
; For example:
; fields[tagline] = "VARCHAR(255) NOT NULL DEFAULT ''"
fields[plagiarism] = "TEXT NOT NULL DEFAULT ''"

; Whether to allow articles in "Special" non-existent issue zero
allow_issue_zero = true


;; Articles
;;
[articles]

; Add your own custom fields here in fields[].
; For example:
; fields[tagline] = "VARCHAR(255) NOT NULL DEFAULT ''"

; Maximum amount of articles an author can post in a day
; (Does not apply to users without that role, such as most editors.)
max_daily_articles = 5

; Maximum amount of authors linked to an article
max_authors = 10

; Maximum amount of keywords in an article
; (Note that this is only enforced client-side.)
max_keywords = 6

; Possible status codes
;
; These are actually hard-coded in the code and duplicated here to make them
; centrally available.
states[] = "created"
states[] = "reviewing"
states[] = "revision"
states[] = "approved"
states[] = "printing"
states[] = "published"
states[] = "rejected"
states[] = "deleted"

; Status codes which represent a work in progress
states_wip[] = "created"
states_wip[] = "reviewing"
states_wip[] = "revision"
states_wip[] = "approved"
states_wip[] = "printing"

; Status codes which represent a final state
states_final[] = "published"
states_final[] = "rejected"
states_final[] = "deleted"

; State transitions
states_next[created] = "reviewing rejected deleted"
states_next[reviewing] = "revision approved printing rejected deleted"
states_next[revision] = "reviewing approved printing rejected deleted"
states_next[approved] = "printing deleted"
states_next[printing] = "published rejected deleted"
states_next[published] = "deleted"
states_next[rejected] = "reviewing deleted"
states_next[deleted] = "reviewing"

; Where file attachments are stored
;
; Earch article's files is stored in a unique folder within this path
; formatted as: "{$issueId}/${articleId}/"
;
path = "var/articles"

; Allowed MIME Types
;
; (Safe because it is determined server-side.)
;
file_types[] = "text/plain"
file_types[] = "application/pdf"
file_types[] = "application/rtf"
file_types[] = "text/rtf"
file_types[] = "text/richtext"
file_types[] = "application/msword"
file_types[] = "application/vnd.oasis.opendocument.chart"
file_types[] = "application/vnd.oasis.opendocument.database"
file_types[] = "application/vnd.oasis.opendocument.formula"
file_types[] = "application/vnd.oasis.opendocument.graphics"
file_types[] = "application/vnd.oasis.opendocument.image"
file_types[] = "application/vnd.oasis.opendocument.presentation"
file_types[] = "application/vnd.oasis.opendocument.spreadsheet"
file_types[] = "application/vnd.oasis.opendocument.text"
file_types[] = "application/vnd.oasis.opendocument.text-master"
file_types[] = "application/vnd.oasis.opendocument.text-web"
file_types[] = "application/vnd.openxmlformats-officedocument.presentationml.presentatio"
file_types[] = "application/vnd.openxmlformats-officedocument.presentationml.slide"
file_types[] = "application/vnd.openxmlformats-officedocument.presentationml.slideshow"
file_types[] = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
file_types[] = "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
file_types[] = "application/zip"
file_types[] = "application/xhtml+xml"
file_types[] = "text/html"
file_types[] = "text/mathml"
file_types[] = "application/postscript"
file_types[] = "image/vnd.djvu"
file_types[] = "text/x-tex"
file_types[] = "image/x-ms-bmp"
file_types[] = "image/png"
file_types[] = "image/x-photoshop"
file_types[] = "image/jpeg"
file_types[] = "image/svg+xml"
file_types[] = "image/tiff"

; Allowed file extensions
;
file_extensions[] = "txt"
file_extensions[] = "pdf"
file_extensions[] = "rtf"
file_extensions[] = "rtx"
file_extensions[] = "wps"
file_extensions[] = "doc"
file_extensions[] = "docx"
file_extensions[] = "docb"
file_extensions[] = "pptx"
file_extensions[] = "zip"
file_extensions[] = "xhtml"
file_extensions[] = "xht"
file_extensions[] = "html"
file_extensions[] = "htm"
file_extensions[] = "mml"
file_extensions[] = "ps"
file_extensions[] = "ai"
file_extensions[] = "eps"
file_extensions[] = "djvu"
file_extensions[] = "djv"
file_extensions[] = "tex"
file_extensions[] = "dvi"
file_extensions[] = "bmp"
file_extensions[] = "psd"
file_extensions[] = "png"
file_extensions[] = "jpg"
file_extensions[] = "jpeg"
file_extensions[] = "svg"
file_extensions[] = "svgz"
file_extensions[] = "tif"
file_extensions[] = "tiff"


;; reviews
;;
[reviews]

; Number of days allowed to accept/decline
accept_days = 7

; How many days between each reminder to accept/decline
accept_reminder_interval = 3

; Uncomment if you want to nag reviewers to accept/decline manually:
;accept_reminder_user = 123

; Number of days ahead of review deadline to remind peers
lastcall_days = 7

; Number of days after a review deadline to warn peers and editors
max_late_days = 5

; Modifier describing default review deadline
deadline_modifier = "+1 month"

; Possible status codes
states[] = "created"
states[] = "reviewing"
states[] = "revision"
states[] = "approved"
states[] = "rejected"
states[] = "deleted"

; Status codes which represent a work in progress
states_wip[] = "created"
states_wip[] = "reviewing"

; Status codes which represent a final state
states_final[] = "revision"
states_final[] = "approved"
states_final[] = "rejected"
states_final[] = "deleted"

; State transitions
states_next[created] = "reviewing deleted"
states_next[reviewing] = "revision approved rejected"
states_next[deleted] = "created"
